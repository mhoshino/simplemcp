parameters:
  docker:
    client:
      stack:
        jenkins:
          service:
            master:
              environment:
                JENKINS_HOME: ${_param:jenkins_home_dir_path}
                JAVA_OPTS: " -server -XX:+AlwaysPreTouch -Xloggc:${_param:jenkins_home_dir_path}/gc-%t.log -XX:NumberOfGCLogFiles=5 -XX:+UseGCLogFileRotation -XX:GCLogFileSize=20m -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCCause -XX:+PrintTenuringDistribution -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -XX:+ParallelRefProcEnabled -XX:+UseStringDeduplication -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=20 -XX:+UnlockDiagnosticVMOptions -XX:G1SummarizeRSetStatsPeriod=1 -Djenkins.install.runSetupWizard=false -Dhudson.DNSMultiCast.disabled=true -Dhudson.udp=-1 -Dhudson.footerURL=https://www.mirantis.com ${_param:jenkins_master_extra_opts}"
                JENKINS_NUM_EXECUTORS: ${_param:jenkins_master_executors_num}
                JENKINS_OPTS: " --handlerCountMax=${_param:jenkins_master_max_concurent_requests}"
                https_proxy: ${_param:docker_https_proxy}
                http_proxy: ${_param:docker_http_proxy}
                no_proxy: ${_param:docker_no_proxy}
              deploy:
                restart_policy:
                  condition: any
              image: ${_param:docker_image_jenkins}
              ports:
                - 18081:8080
                - 50001:50000
              volumes:
                - /srv/volumes/jenkins:/var/jenkins_home
                - /etc/ssl/certs/java/cacerts:/etc/ssl/certs/java/cacerts:ro
            slave01:
              environment:
                JENKINS_URL: ${_param:jenkins_master_url}
                JENKINS_AGENT_NAME: slave01
                JENKINS_UPDATE_SLAVE: 'true'
                JENKINS_LOGIN: ${_param:jenkins_slave_user}
                JENKINS_PASSWORD: ${_param:jenkins_slave_password}
                JAVA_OPTS: ${_param:jenkins_slave_extra_opts}
                https_proxy: ${_param:docker_https_proxy}
                http_proxy: ${_param:docker_http_proxy}
                no_proxy: ${_param:docker_no_proxy}
              deploy:
                restart_policy:
                  condition: any
                placement:
                  constraints:
                    - "node.hostname == ${_param:cluster_node01_name}"
              image: ${_param:docker_image_jenkins_slave}
              volumes:
                - /etc/ssl/certs/java/cacerts:/etc/ssl/certs/java/cacerts:ro
                - /etc/aptly-publisher.yaml:/etc/aptly-publisher.yaml:ro
                - /var/run/docker.sock:/var/run/docker.sock
                - /usr/bin/docker:/usr/bin/docker:ro
                - /var/lib/jenkins:/var/lib/jenkins
